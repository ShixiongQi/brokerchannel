apiVersion: apps/v1
kind: Deployment
metadata:
  name: brokerchannel
  namespace: knative-samples
  labels:
    samples.knative.dev/release: devel
spec:
  selector:
    matchLabels:
      app: brokerchannel
      role: brokerchannel
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
      labels:
        app: brokerchannel
        role: brokerchannel
        eventing.knative.dev/release: devel
    spec:
      serviceAccountName: broker-channel-controller
      containers:
      - name: brokerchannel
        # This is the Go import path for the binary that is containerized
        # and substituted here.
        image: ko://github.com/cowbon/brokerchannel/cmd/brokerchannel

        # The numbers are based on performance test results from
        # https://github.com/knative/serving/issues/1625#issuecomment-511930023
        resources:
          requests:
            cpu: 300m
            memory: 60Mi
          limits:
            cpu: 1000m
            memory: 600Mi

        env:
        # Run Activator with GC collection when newly generated memory is 500%.
        - name: GOGC
          value: "500"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability
        # TODO(https://github.com/knative/pkg/pull/953): Remove stackdriver specific config
        - name: METRICS_DOMAIN
          value: knative.dev/internal/serving

        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          capabilities:
            drop:
            - all

        ports:
        - name: metrics
          containerPort: 9090
        - name: profiling
          containerPort: 8008
        - name: http1
          containerPort: 8012
        - name: h2c
          containerPort: 8013

      # The activator (often) sits on the dataplane, and may proxy long (e.g.
      # streaming, websockets) requests.  We give a long grace period for the
      # activator to "lame duck" and drain outstanding requests before we
      # forcibly terminate the pod (and outstanding connections).  This value
      # should be at least as large as the upper bound on the Revision's
      # timeoutSeconds property to avoid servicing events disrupting
      # connections.
      terminationGracePeriodSeconds: 600

---
apiVersion: v1
kind: Service
metadata:
  name: brokerchannel-service
  namespace: knative-samples
  labels:
    app: brokerchannel
    samples.knative.dev/release: devel
spec:
  selector:
    app: brokerchannel
  ports:
  # Define metrics and profiling for them to be accessible within service meshes.
  - name: http-metrics
    port: 9090
    targetPort: 9090
  - name: http-profiling
    port: 8008
    targetPort: 8008
  - name: http
    port: 80
    targetPort: 8012
  - name: http2
    port: 81
    targetPort: 8013
  type: ClusterIP
